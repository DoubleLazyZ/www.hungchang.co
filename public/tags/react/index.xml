<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on ZZ的筆記</title>
    <link>https://www.hungchang.co/tags/react/</link>
    <description>Recent content in React on ZZ的筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY 4.0</copyright>
    <lastBuildDate>Sun, 23 Apr 2023 02:14:08 +0800</lastBuildDate><atom:link href="https://www.hungchang.co/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>學習React</title>
      <link>https://www.hungchang.co/posts/react_usereducer/</link>
      <pubDate>Sun, 23 Apr 2023 02:14:08 +0800</pubDate>
      
      <guid>https://www.hungchang.co/posts/react_usereducer/</guid>
      <description>跟著影片學習 React，之前買了課程一直沒有上課，最近無聊回來看一下課程，順便紀錄一下，以下附上課程連結。 Epic React | 其實 useState 是用 useReducer 函數寫出來，下面會列出一些 useReducer 不常見的用法，最後才是介紹中最標準的用法。
useReducer用法一: 直接傳入最新值 拿計數器的範例來當例子，原本使用 useState，現在我們改成useReducer。 useReducer後面要帶上兩個參數:
const [state, newState] = useState(initialState); const [reducer, dispatch] = useReducer(reducerFunction, initialState); 第一個是一個 Ruducer函數，這個Reducer函數會去處理 React 的資料。
function reducerFunction(state, action) Reducer 函數會有兩個參數，第一個參數會是畫面 State 更新前當下 State 的值， React 已經處理好我們可以直接拿到，而第二個參數則是讓使用者傳入 （透過 useReducer 回傳後陣列內的第二個值(index=1)的函數呼叫時傳入)， 通常我們會稱作 action ，這個 action 可以以是數值（純值、物件），也可以是函數。
第二個參數則是放入 初始值 也就是原本 useState 中傳入的參數。 而會傳的陣列，陣列內的第一個元素是state，也就是當前的資料的數值，第二個函數是去 呼叫我們傳入 useReducer 內的第一個參數函數，通常我們會稱這個回傳的函數是 dispatch 函數。 可以在呼叫 dispatch 函數時傳入一個參數，而這個傳入的參數就會變成 Reducer函數的第二個參數 (action)。
import * as React from &amp;#39;react&amp;#39; function countReducer(state, newValue) { return newValue } function Counter({ initialCount = 0, step = 1 }) { const [state, setState] = React.</description>
    </item>
    
  </channel>
</rss>
